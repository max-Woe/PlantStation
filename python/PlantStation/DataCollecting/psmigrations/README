Generic single-database configuration.

Generating a new table:
    create a new ORM entity class like:
    '''python
    from sqlalchemy import Column, DateTime, String, Integer, func, Float
    from sqlalchemy.ext.declarative import declarative_base
    from sqlalchemy.testing.suite.test_reflection import metadata

    Base = declarative_base()

    metadata = Base.metadata

    class Measurement(Base):
        __tablename__ = 'measurement'

        id = Column(Integer, primary_key=True)
        value = Column(Float, nullable=False)
        unit = Column(String(50), nullable=False)
        sensor_id = Column(Integer, nullable=False)
        recorded_at = Column(DateTime, nullable=False) #time when recorded by sensor
        created_at = Column(DateTime, default=func.now(), nullable=False)   #time when recorded by database

        def __repr__(self):
            return f"id: {self.id}, vlaue: {self.value}, unit: {self.unit}, sensor_id: {self.sensor_id}, recorded_at: {self.recorded_at}, created_at: {self.created_at}"


